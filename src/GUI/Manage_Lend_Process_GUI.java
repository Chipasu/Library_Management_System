package GUI;

import DB.DB;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Extreme
 */
public class Manage_Lend_Process_GUI extends javax.swing.JFrame {

    /**
     * Creates new form Manage_Lend_Process_GUI
     */
    public Manage_Lend_Process_GUI() {
        initComponents();
        disabling();
        setResizable(false);
        
        try
        {
            int ref=0;
            Connection con = DB.myCon();
            Statement stmt =  con.createStatement();
           
            ResultSet res2 = stmt.executeQuery("SELECT lastrefno FROM idgenarate WHERE rawNo="+1+"");
            while (res2.next()) 
            {
                ref= Integer.parseInt(res2.getString("lastrefno"));
            }
             reft.setText(" "+ref);
            
        }
         catch (Exception e) {
              
               JOptionPane.showMessageDialog(this, ""+e.getMessage()+" Error,  Student Not Added!","",JOptionPane.ERROR_MESSAGE);
                        
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        reft = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        memberid = new javax.swing.JTextField();
        bookid = new javax.swing.JTextField();
        check = new javax.swing.JButton();
        genarate = new javax.swing.JButton();
        save = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        back = new javax.swing.JButton();
        borroweddate = new com.toedter.calendar.JDateChooser();
        duedate = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Lending Process");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/title ori.jpg"))); // NOI18N

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Library Management System", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 24))); // NOI18N

        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Lending Process", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        reft.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        reft.setText("Ref");
        reft.setBounds(160, 60, 80, 20);
        jLayeredPane2.add(reft, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Book ID");
        jLabel3.setBounds(20, 154, 60, 30);
        jLayeredPane2.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Borrowed Date");
        jLabel4.setBounds(20, 210, 90, 20);
        jLayeredPane2.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Due Date");
        jLabel5.setBounds(20, 270, 60, 14);
        jLayeredPane2.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        memberid.setBounds(150, 110, 190, 20);
        jLayeredPane2.add(memberid, javax.swing.JLayeredPane.DEFAULT_LAYER);

        bookid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookidActionPerformed(evt);
            }
        });
        bookid.setBounds(150, 160, 190, 20);
        jLayeredPane2.add(bookid, javax.swing.JLayeredPane.DEFAULT_LAYER);

        check.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/check.png"))); // NOI18N
        check.setText("Check");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });
        check.setBounds(380, 110, 90, 20);
        jLayeredPane2.add(check, javax.swing.JLayeredPane.DEFAULT_LAYER);

        genarate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/arrow.png"))); // NOI18N
        genarate.setText("Genrate");
        genarate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genarateActionPerformed(evt);
            }
        });
        genarate.setBounds(370, 270, 100, 20);
        jLayeredPane2.add(genarate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/save.png"))); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        save.setBounds(380, 380, 90, 25);
        jLayeredPane2.add(save, javax.swing.JLayeredPane.DEFAULT_LAYER);

        reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/reset.gif"))); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        reset.setBounds(510, 380, 90, 25);
        jLayeredPane2.add(reset, javax.swing.JLayeredPane.DEFAULT_LAYER);

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/back1.png"))); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        back.setBounds(580, 160, 90, 40);
        jLayeredPane2.add(back, javax.swing.JLayeredPane.DEFAULT_LAYER);
        borroweddate.setBounds(150, 210, 210, 20);
        jLayeredPane2.add(borroweddate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        duedate.setBounds(150, 270, 210, 20);
        jLayeredPane2.add(duedate, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Member ID");
        jLabel6.setBounds(20, 110, 80, 20);
        jLayeredPane2.add(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("New Reference Number");
        jLabel7.setBounds(20, 60, 130, 20);
        jLayeredPane2.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBounds(20, 40, 740, 440);
        jLayeredPane1.add(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu2.setText("Navigate");

        jMenuItem8.setText("Home");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem2.setText("Manage Members");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Manage Books");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Manage Book Lending");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Manage Inventory");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Manage Newspaper Reocords");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuItem7.setText("Manage User Accounts");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLayeredPane1)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-816)/2, (screenSize.height-638)/2, 816, 638);
    }// </editor-fold>//GEN-END:initComponents

    private void bookidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookidActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        try
        {
            if (memberid.getText().equals("")) 
         {
            JOptionPane.showMessageDialog(this, "Please enter the member ID you wish to check ","",JOptionPane.OK_OPTION);
         }
            else
            {
             String Memberid=memberid.getText();
            Connection con = DB.myCon();
            Statement S = con.createStatement();
            ResultSet rs=null;
            ResultSet rs1=null;
             
         //selecting member table   
            if(Memberid.charAt(0)=='S')
            {
                
                    
                rs = S.executeQuery("SELECT * FROM student WHERE SmemberID='" +Memberid+ "'");
                    if (rs.next()) 
                        {
                        
                        int grade=Integer.parseInt(rs.getString("Grade")) ;
                        int count=Integer.parseInt(rs.getString("NoOfBooks")) ;
                            
                        if(grade<10)
                        {
                            if(count<1)
                            {
                                enabling();
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(this, "Member has exceeded the  borrow books limit ","",JOptionPane.OK_OPTION);
                            }
                        }
                        else
                        {
                            if(count<2)
                            {
                                
                                    rs1 = S.executeQuery("SELECT * FROM borrow WHERE memberid='" +Memberid+ "' AND statues='Borrowed' AND duedate <= CURRENT_DATE()");
                                    
                                    if(rs1.next())
                                    {
//                                        int ref=Integer.parseInt(rs.getString("refno")) ;
                                        //Date due=rs.getDate("duedate");
                                        
                                        //Date now=new Date();
                                        
                                        //if(now.compareTo(due)>=0)
                                       //{
                                            JOptionPane.showMessageDialog(this, "Member has over due book lend ","",JOptionPane.OK_OPTION);
                                        //}
                                        
                                    }
                                    else
                                    {
                                        enabling();
                                    }
                                
                                 
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(this, "Member has exceeded the  borrow books limit ","",JOptionPane.OK_OPTION);
                            }
                        }

                        } 
                    else
                        {
                        JOptionPane.showMessageDialog(this, " No such Member  !","",JOptionPane.OK_OPTION);
                        memberid.setText("");
                        }
                   
            }
            else if(Memberid.charAt(0)=='T')
            {
                rs = S.executeQuery("SELECT * FROM teacher WHERE TmemberID='" +Memberid+ "'");
                 
                 if (rs.next()) 
                        {
                          
                        
                        int count=Integer.parseInt(rs.getString("NoOfBooks")) ;
                         if(count<2)
                            {
                                
                                    rs1 = S.executeQuery("SELECT * FROM borrow WHERE memberid='" +Memberid+ "' AND statues='Borrowed' AND duedate <= CURRENT_DATE()");
                                    
                                    if(rs1.next())
                                    {
//                                        int ref=Integer.parseInt(rs.getString("refno")) ;
//                                        Date due=rs.getDate("duedate");
                                        
                                        Date now=new Date();
                                        
//                                        if(now.compareTo(due)>=0)
//                                        {
                                            JOptionPane.showMessageDialog(this, "Member has over due book lend ","",JOptionPane.ERROR_MESSAGE);
//                                        }
                                        
                                    }
                                    else
                                    {
                                        enabling();
                                    }
                                
                                 
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(this, "Member has exceeded the  borrow books limit ","",JOptionPane.ERROR_MESSAGE);
                            }


                        } 
                    else
                        {
                        JOptionPane.showMessageDialog(this, " No such Member  !","",JOptionPane.ERROR_MESSAGE);
                        memberid.setText("");
                        }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Please enter a correct ID ","",JOptionPane.WARNING_MESSAGE);
            }
            
            //displayinig values
        
            }  
            
        }
         catch (Exception e)
         {
                    JOptionPane.showMessageDialog(this, ""+e.getMessage()+" Error, !","",JOptionPane.OK_OPTION);
         }
    }//GEN-LAST:event_checkActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed

        try
        {
             Connection con = DB.myCon();
             Statement stmt =  con.createStatement();
             
             if (memberid.getText().equals("") || bookid.getText().equals("")||borroweddate.getDate()==null||duedate.getDate()==null) 
            {
              JOptionPane.showMessageDialog(this, "Please fill in all fields ", "",JOptionPane.WARNING_MESSAGE);
            }
             
            
            else
             {
                 

                    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                String Bookid=bookid.getText();
                String Memberid=memberid.getText();
                                            Date d1=borroweddate.getDate();
                                            Date d2=duedate.getDate();
                                                String DateBorrowed=(String) dateFormat.format(d1);
                                                String DateDue=(String) dateFormat.format(d2);
                                                int noofbooks=0;
                       if(d2.compareTo(d1)>=0)
                       {
                                                
                       ResultSet res1 = stmt.executeQuery("SELECT * FROM book1 WHERE bookid='"+Bookid+"'");
                       if(res1.next())
                       {
                           String statues=res1.getString("statues");
                           String type=res1.getString("booktype");
                           
                           if(!(statues.equals("Borrowed")||type.equals("Reference")))
                           {
                                int ref=0;
                                ResultSet res2 = stmt.executeQuery("SELECT lastrefno FROM idgenarate WHERE rawNo=1");
                                if (res2.next()) 
                                {
                                    ref= Integer.parseInt(res2.getString("lastrefno"));
                                }
                                
                                String query1="INSERT into borrow Values("+ref+",'"+Memberid+"','"+Bookid+"','"+DateBorrowed+"','"+DateDue+"','Borrowed',null,0,0.0)";
                                stmt.executeUpdate(query1);
                                
                                 String query2="";
                                String query3="";
                                String query4="UPDATE book1 SET  statues ='Borrowed' WHERE bookid = '"+Bookid+"'";
         
                                
                                ResultSet res3=null;
                                   
          
                                if(Memberid.charAt(0)=='S')
                                {
                                    query2="SELECT NoOfBooks FROM student WHERE SmemberID='" +Memberid+ "'";
                                            res3=stmt.executeQuery(query2);
                                            if(res3.next())
                                            {
                                                noofbooks=Integer.parseInt(res3.getString("NoOfBooks")); 
                                                    noofbooks++;
                                            }
                                    query3="UPDATE student SET  NoOfBooks ="+noofbooks+" WHERE SmemberID = '"+Memberid+"'";
                                 }
                                if(Memberid.charAt(0)=='T')
                                {
                                        query2="SELECT NoOfBooks FROM teacher WHERE TmemberID='" +Memberid+ "'";
                                        res3=stmt.executeQuery(query2);
                                            if(res3.next())
                                            {
                                                noofbooks=Integer.parseInt(res3.getString("NoOfBooks")); 
                                                    noofbooks++;
                                            }
                                        query3="UPDATE teacher SET  NoOfBooks ="+noofbooks+" WHERE TmemberID = '"+Memberid+"'";
                                }
          
                               
                                stmt.executeUpdate(query3);
                                stmt.executeUpdate(query4);
                                
                                
                                
                                JOptionPane.showMessageDialog(this,"Book Lend details added Referance number="+ref);

                                ref=ref+1;

                                String qry="update idgenarate set lastrefno="+ref+" where rawNo=1";
                                stmt.executeUpdate(qry);
                                
                                
                                int ref1=0;
           
                                ResultSet res4 = stmt.executeQuery("SELECT lastrefno FROM idgenarate WHERE rawNo="+1+"");
                                if (res4.next()) 
                                {
                                    ref1= Integer.parseInt(res4.getString("lastrefno"));
                                }
                            reft.setText(" "+ref1);
                                
                                
                               reseting();
                               disabling();
                                
                                
                           }
                           else
                            {
                           JOptionPane.showMessageDialog(this, "Book id is not available for borrowing ", "",JOptionPane.ERROR_MESSAGE);
                            }
                       }
                       else
                       {
                           JOptionPane.showMessageDialog(this, "Book id is incorrect ", "",JOptionPane.ERROR_MESSAGE);
                       }
                     
                       
                       }
                       else
                       {
                           JOptionPane.showMessageDialog(this, "Incorrect due date ", "",JOptionPane.ERROR_MESSAGE);
                       }
                       
                       
                       
                       
                       
                    
             } 
        }
        
        catch (Exception e)
         {
                    JOptionPane.showMessageDialog(this, ""+e.getMessage()+" Error, !","",JOptionPane.ERROR_MESSAGE);
         }
        
        
        
                                        
    }//GEN-LAST:event_saveActionPerformed

    private void genarateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genarateActionPerformed
       
        try
        {
            //long msper14day = 24 * 3600 * 1000 *14;
            
            Date borrow=borroweddate.getDate();
                    Calendar cal = Calendar.getInstance();  
                    cal.setTime(borrow);  
                    cal.add(Calendar.DATE, 14); // add 10 days  

                    borrow = cal.getTime();  
            
           
            duedate.setDate(borrow);
            
            
    
            
            
        }
         catch (Exception e)
         {
                    JOptionPane.showMessageDialog(this, ""+e.getMessage()+" Error, !","",JOptionPane.OK_OPTION);
         }
        
        long MILLIS_PER_DAY = 24 * 3600 * 1000;
    }//GEN-LAST:event_genarateActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new Manage_Book_Lending().setVisible(true);
        this.dispose();
        
        
    }//GEN-LAST:event_backActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        new Home_GUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new Manage_Members_GUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        new Manage_Books_GUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        new Manage_Book_Lending().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        new Manage_Inventory_GUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        new Manage_Newspaper_GUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        new Manage_User_GUI().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        memberid.setText("");
        bookid.setText("");
        borroweddate.setDate(null);
        duedate.setDate(null);
        
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manage_Lend_Process_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manage_Lend_Process_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manage_Lend_Process_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manage_Lend_Process_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Manage_Lend_Process_GUI().setVisible(true);
            }
        });
    }
    private void disabling()
    {
        bookid.setEnabled(false);
        borroweddate.setEnabled(false);
        duedate.setEnabled(false);
        genarate.setEnabled(false);
      
        save.setEnabled(false);
    }
     private void enabling()
    {
        bookid.setEnabled(true);
        borroweddate.setEnabled(true);
        duedate.setEnabled(true);
        genarate.setEnabled(true);
      
        save.setEnabled(true);
    }
     
      private void reseting()
    {
        memberid.setText("");
        bookid.setText("");
        borroweddate.setDate(null);
        duedate.setDate(null);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTextField bookid;
    private com.toedter.calendar.JDateChooser borroweddate;
    private javax.swing.JButton check;
    private com.toedter.calendar.JDateChooser duedate;
    private javax.swing.JButton genarate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JTextField memberid;
    private javax.swing.JLabel reft;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
